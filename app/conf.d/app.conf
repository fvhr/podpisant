upstream backend {
    server api:8000;
}

server {
    listen 80;
    server_name menoitami.ru;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name menoitami.ru;

    ssl_certificate /etc/letsencrypt/live/menoitami.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/menoitami.ru/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;

    location / {
        # Динамически разрешаем только определённые Origin (включая localhost)
        if ($http_origin ~* (https?://(localhost|127\.0\.0\.1|menoitami\.ru)(:\d+)?$)) {
            set $cors_origin $http_origin;
        }

        # Критические CORS-заголовки
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, Origin, Accept' always;

        # Обработка предварительных OPTIONS-запросов
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Проксирование на бэкенд
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # Критически важные заголовки для проксирования
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Для авторизации
        proxy_set_header Authorization "Bearer $cookie_access_token";

        # Безопасность и обработка редиректов
        proxy_redirect off;
        proxy_buffering off;

        # Таймауты
        proxy_connect_timeout 60s;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;

        # Дополнительные настройки для WebSocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        rewrite ^(/[^/]+)$ $1/ break;
    }
}